# Comment lines starting with hashtags will be ignored.
# Your brief name for this protocol.
Name: Alchemical free energies using BioSimSpace.
#
# All software packages used and their versions:
Software:
BioSimSpace (feature-freenrgy) https://github.com/michellab/BioSimSpace/tree/feature-freenrg
Sire (feature-mapping) https://github.com/michellab/Sire/tree/feature-mapping
AmberTools (18)
GROMACS (2018)

Full installation instructions:
https://github.com/michellab/D3R2018/blob/master/CatS/BSS/README.md

Protein Forcefield: AMBER FF14SB
Ligand Forcefield: AMBER GAFF2
Water Model: TIP3P
#
# List any number of key computational parameters in the following lines:
Parameter:
#
# Provide free text description of your method below. Use as many lines as you need.
# The level of detail should be about what you would write for a publication.
Method:
The ligands were prepared for relative free energy calculations from the output
of the docking protocols. Each ligand was parameterised using GAFF within
BioSimSpace using the following script:
https://github.com/michellab/D3R2018/blob/master/CatS/BSS/parameterise.py
This was run for each of the 39 ligands as well as two additional intermediate
states that were added in order to simplifly perturbations between certain
ligand pairs.

Full production simulations for each forward and reverse ligand pair mapping
within the network were run almost entirely within BioSimSpace using the
following script:
https://github.com/michellab/D3R2018/blob/master/CatS/BSS/binding_freenrgy.py
This performed the following sequence of tasks:

1) Read in the protein and crystal waters from a PDB file. Extract the
   water molecules from the system.
2) Parameterise the protein using AMBER FF14SB.
3) Read the two pre-parameterised ligands. (GAFF2)
4) Look for a mapping file specifying the matching atoms in the maximum
   common substructure of the ligand pair. If the file is not present,
   then the mapping is generated by BioSimSpace. Preliminary simulations
   found low atom counts for certain BioSimSpace generated mappings so,
   where necessary, mapping files were generated using additional tools
   (FESetup and RDKit). However, it should be noted that all tools struggled
   with certain mappings, with each performing better or worse for
   different pairs.
5) The first ligand is aligned to the second based on the mapping.
6) The two ligands are merged based on the mapping. This creates a
   perturbable molecule describing the two lambda end states (0 and 1)
   as well as the properties, e.g. bonds, angles, dihedrals, etc., that
   are perturbed.
7) A molecular system is created from the merged molecule, the protein,
   and the crystal waters.
8) This system is then solvated in a 60 Angstrom cubed box of TIP3P
   water. Existing crystal waters are automatically converted to the
   correct water topology and the system is neutralised.
9) A free energy protocol is created using a run time of 4 nanoseconds
   per window and 17 linearly spaced windows per free energy leg.
10) Using the solvated protein-ligand complex and protocol, BioSimSpace
    automatically configures all of the input required for the full
    binding free energy calculation.
11) The simulation is run. For simplicity, each lambda window is run in
    sequence. BioSimSpace can automatically detect crashes and re-run
    specific windows as necessary.

The full set of simulations were run on a 10 node GPU cluster with 2
GPUs per node. A single job submission involved running the full forward
and reverse mappings on the two GPUs within a node. A Slurm template and
the bash script used for submission can be found at the following links:
https://github.com/michellab/D3R2018/blob/master/CatS/BSS/template.slm
https://github.com/michellab/D3R2018/blob/master/CatS/BSS/submit.sh

The output the simulations was analysed using the 'analyse_freenrg'
package within Sire, which uses the pymbar package to perform multi
state Bennet's acceptance ratio analysis. The following bash script
was used to perform incremental analysis as jobs finished:
https://github.com/michellab/D3R2018/blob/master/CatS/BSS/analyse_data.sh

#
# Yes/No questions:
# Question 1: Did you use visual inspection to select, eliminate and/or manually adjust your final predicted poses?
# Question 2: Did you use any machine learning methods to perform this calculation?
#
Answer 1: No
Answer 2: No
